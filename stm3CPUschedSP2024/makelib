#       CompSci, Fall 2013, Dr. Dale Parson.
#       "cp" this makelib into your login directory.

#       My makelib gets standard definitions that I used in all makefiles.

STUDENT := $(shell basename $$HOME)
WORKDIR := $(shell basename `pwd`)
ACCTDIR := $(shell dirname $$HOME)
ACCTTYPE := $(shell basename $(ACCTDIR))
DPARSON := $(shell dirname ~parson)/parson
ifeq ($(ACCTTYPE),kutztown.edu)
WWWACCT=faculty
else
ifeq ($(ACCTTYPE),KUTZTOWN)
WWWACCT=faculty
else
WWWACCT=student
endif
endif
ACCTWWW=$$HOME/public_html

MACHINENAME := $(shell uname -n)
ifeq ($(MACHINENAME),csitrd)
PYTHON= PLEASE_TEST_ON_MCGONAGALL
PYTHONLOWCPU= PLEASE_TEST_ON_MCGONAGALL
DOT= dot
else
ifeq ($(MACHINENAME),kuvapcsitrd01.kutztown.edu)
PYTHON= PLEASE_TEST_ON_MCGONAGALL
PYTHONLOWCPU= PLEASE_TEST_ON_MCGONAGALL
# PYTHON= /usr/local/bin/python3.7
# PYTHONLOWCPU= /usr/local/bin/python3.7
DOT= /usr/bin/dot
else
ifeq ($(MACHINENAME),kupapcsit01)
PYTHON= /usr/local/bin/python3.7
PYTHONLOWCPU= /usr/local/bin/python3.7
DOT= /usr/bin/dot
else
ifeq ($(MACHINENAME),harry.kutztown.edu)
PYTHON= /opt/csw/bin/python
PYTHONLOWCPU= /opt/csw/bin/python
DOT= PleaseUseAcadForDot
else
PYTHON= python
PYTHONLOWCPU= python
DOT= dot
endif
endif
endif
endif

ifeq ($(SUNCC),1)
CPPCC= /opt/SUNWspro/bin/CC
else
CPPCC= g++
endif
CXXFILES := $(wildcard *.cxx)
XOBJFILES := $(subst .cxx,.o,$(CXXFILES))
CPPFILES := $(wildcard *.cpp)
POBJFILES := $(subst .cpp,.o,$(CPPFILES))
OBJFILES = $(XOBJFILES) $(POBJFILES)

JAVAC = javac
JAVAFILES := $(wildcard *.java)
CLASSFILES := $(subst .java,.class,$(JAVAFILES))

DOTFILES := $(wildcard *.dot)
JPEGFILES := $(subst .dot,.jpg,$(DOTFILES))

DEFFLAGS =

ifeq ($(DEBUG),1)
DEBUGFLAG = -g
else
DEBUGFLAG =
endif

INCFLAGS = -I.

CPPFLAGS= $(DEFFLAGS) $(INCFLAGS) $(DEBUGFLAG)

%.o :	%.cxx
		/bin/bash -c "$(CPPCC) -c $(CPPFLAGS) $< -o $@"

%.o :	%.cpp
		/bin/bash -c "$(CPPCC) -c $(CPPFLAGS) $< -o $@"

%.class:	%.java
		/bin/bash -c "$(JAVAC) $(DEBUGFLAG) $<"

%.jpg:	%.dot
		/bin/bash -c "$(DOT) -Tjpeg $< > $@"

javadoc:	FORCE
			-mkdir $(ACCTWWW)
			-mkdir $(ACCTWWW)/javadoc
			chmod -R o+r+X $(ACCTWWW)
			cd .. && javadoc -protected -d $(ACCTWWW) -sourcepath `pwd` $(WORKDIR)

JARFILE=$(BASENAME).jar

jar:		$(JARFILE)
			jar uvf $(JARFILE) $(CLASSFILES)

$(JARFILE):	$(CLASSFILES)
			jar cvf $(JARFILE) $(CLASSFILES)

subclean:	FORCE
		/bin/rm -f *.o *.class $(JARFILE) core *.exe *.obj *.pyc __pycache__/*.pyc

clean:		FORCE

FORCE:

turnitin:		clean
		@echo
		@echo Do you really want to send $(TARGET) to Professor Parson?
		@echo Hit Enter to continue, control-C to abort.
		@echo
		@read keyboard
		/bin/bash -c "cd .. ; /bin/chmod 700 .                  ; \
		/bin/tar cvf ./$(TARGET)_$(STUDENT).tar $(WORKDIR)      ; \
		/bin/gzip ./$(TARGET)_$(STUDENT).tar                    ; \
		/bin/chmod 666 ./$(TARGET)_$(STUDENT).tar.gz            ; \
		/bin/mv ./$(TARGET)_$(STUDENT).tar.gz ~parson/incoming"
